version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - microservice-network
  rabbitmq:
    image: rabbitmq:3.8.9-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - microservice-network
  client:
    build:
      context: ..
    image: client
    networks:
      - microservice-network
    environment:
      - SERVER_HOST=server
      - SERVER_PORT=5000
      - MESSAGE_QUEUE_HOST=rabbitmq
      - MESSAGE_QUEUE_PORT=5672
  server:
    build:
      context: ..
    image: server
    networks:
      - microservice-network
    environment:
      - MESSAGE_QUEUE_HOST=rabbitmq
      - MESSAGE_QUEUE_PORT=5672
  parser:
    build:
      context: ..
    image: parser
    networks:
      - microservice-network
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - MESSAGE_QUEUE_HOST=rabbitmq
      - MESSAGE_QUEUE_PORT=5672
  api:
    build:
      context: ..
    image: api
    networks:
      - microservice-network
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    expose:
      - 5000
    command: python elasticsearch_api.py
    volumes:
      - ./api:/app

  nginx:
    image: nginx
    networks:
      - microservice-network
    ports:
      - "80:80"
    depends_on:
      - api
    links:
      - api
    volumes:
      - ./nginx:/etc/nginx/conf.d

  volumes:
    elasticsearch-data:

  networks:
    microservice-network:
