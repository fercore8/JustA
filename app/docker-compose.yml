version: '3'

services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbitmq
    environment:
      - RABBITMQ_CONFIG_FILE=/app/rabbitmq.config
      - RABBITMQ_NODE_PORT=5672
    volumes:
      - ./app/rabbitmq.config:/app/rabbitmq.config
    expose:
      - '15672'
    networks:
      - app-tier
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - app-tier
    extra_hosts:
      - "host.docker.internal:host-gateway"
  client:
    build: .
    command:
      - python
      - client.py
    networks:
      - app-tier
    environment:
      - withdocker=1
  #    extra_hosts:
#      - "host.docker.internal:host-gateway"
  server:
    build: .
#    command:
#      - uvicorn
#      - uvicorn.run(server:app, host="0.0.0.0", port=8080)
#      - server:app --host 0.0.0.0 --port 8080

#      - server:app --bind --host 0.0.0.0 --port 8080 --worker-class aiohttp.GunicornWebWorker
    command: [ "uvicorn", "server:app", "--host", "rabbitmq", "--port", "8080"]
    ports:
      - '8080:8080'
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    networks:
      - app-tier
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - withdocker=1
  gui:
    build: .
    command:
      - python
      - gui.py
    depends_on:
      - api
    networks:
      - app-tier
    environment:
      - withdocker=1
  #    extra_hosts:
#      - "host.docker.internal:host-gateway"

  parser:
    build: .
    command:
      - python
      - parser.py
    depends_on:
      - rabbitmq
      - elasticsearch
    networks:
      - app-tier
    environment:
      - withdocker=1

  #    extra_hosts:
#      - "host.docker.internal:host-gateway"

  api:
    build: .
    command: [ "uvicorn", "elasticsearch_api:app", "--host", "0.0.0.0", "--port", "5000"]
#    command:
#      - uvicorn
#      - elasticsearch_api:app --host 0.0.0.0 --port 5000
#      - uvicorn.run(elasticsearch_api:app, host="0.0.0.0", port=5000)
#      - elasticsearch_api:app --bind --host 0.0.0.0 --port 5000 --worker-class aiohttp.GunicornWebWorker

    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    expose:
      - '5000'
    networks:
      - app-tier
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

#  nginx:
#    image: nginx
#    ports:
#      - "80:80"
#    depends_on:
#      - api
#    links:
#      - api
#    volumes:
#      - ./nginx:/etc/nginx/conf.d

networks:
    app-tier:
       driver: bridge
