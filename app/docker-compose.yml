version: "3.7"

services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbitmq
    networks:
      - app-tier

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - app-tier

  nginx:
    image: nginx:latest
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    depends_on:
      - server
    networks:
      - app-tier
    ports:
      - "8080:8080"

  client:
    build: .
    command:
      - python
      - client.py
    networks:
      - app-tier
    environment:
      - withdocker=1
    depends_on:
      - server
    restart: always

  server:
    build: .
    command: ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8080"]
#    ports:
#      - "8080:8080"
    expose:
      - 8080
    depends_on:
      - rabbitmq
    networks:
      - app-tier
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - withdocker=1
    restart: always

  gui:
    build: .
    command:
      - python
      - gui.py
    depends_on:
      - api
    ports:
      - "5001:5001"
    networks:
      - app-tier
    expose:
      - 5001
    environment:
      - withdocker=1

  parser:
    build: .
    command:
      - python
      - parser.py
    depends_on:
      - rabbitmq
      - elasticsearch
    networks:
      - app-tier
    environment:
      - withdocker=1
    restart: always

  api:
    build: .
    command: ["uvicorn", "elasticsearch_api:app", "--host", "0.0.0.0", "--port", "5000"]
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    expose:
      - 5000
    networks:
      - app-tier

networks:
    app-tier:
       driver: bridge
